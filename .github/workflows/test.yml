name: Test

on:
  workflow_call:
    inputs:
      database-image:
        type: string
        required: true
      database-url:
        type: string
        required: true
      database-port:
        type: string
        required: true
      database-versions:
        type: string
        required: true
      database-env:
        type: string
        required: true
      database-health-cmd:
        type: string
        required: true
      database-version-codecov:
        type: string
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: [ "3.8", "3.9", "3.10" ]
        django: [ "3.1", "3.2", "4.0" ]
        db: ${{ fromJSON(inputs.database-versions) }}
        # ref: https://github.com/jefftriplett/python-github-actions-matrix-demo
        exclude:
          # Python 3.10 is compatible with Django 3.2+
          - python: "3.10"
            django: "3.1"
        # newest matrix set which will upload to codecov
        include:
          - python: "3.10"
            django: "4.0"
            db: ${{ inputs.database-version-codecov }}
            codecov: "true"
    services:
      db:
        image: ${{ inputs.database-image }}:${{ matrix.db }}
        env: ${{ fromJSON(inputs.database-env) }}
        ports:
          - ${{ inputs.database-port }}/tcp
        options: >-
          --health-cmd "${{ inputs.database-health-cmd }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Fetch pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.python }}
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: venv-${{ matrix.python }}-${{ matrix.django }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.12"
      - name: Install dependencies
        run: |
          poetry install -n
          poetry add -n django@~${{ matrix.django }}.0
      - name: Verify package versions
        run: |
          python -V
          poetry show django
      - name: Run tests
        working-directory: ./test_secured_fields
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          DATABASE_URL: ${{ inputs.database-url }}:${{ job.services.db.ports[inputs.database-port] }}/db
        run: |
          poetry run coverage run manage.py test
          poetry run coverage report -m
          poetry run coverage xml
      - name: Upload coverage to Codecov
        if: matrix.codecov == 'true'
        uses: codecov/codecov-action@v2
        with:
          name: ${{ inputs.database-image }}
          directory: ./test_secured_fields
          fail_ci_if_error: true

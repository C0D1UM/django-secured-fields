name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Fetch pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip
      - name: Install dependencies
        run: |
          pip install pylint~=2.0
      - name: Analyzing the code
        run: |
          pylint secured_fields test_secured_fields

  test:
    needs:
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ "3.8", "3.9", "3.10" ]
        django: [ "3.1", "3.2" ]
        postgres: [ "12.9", "13.5", "14.1" ]
        mysql: [ "5.7", "8.0" ]
        # ref: https://github.com/jefftriplett/python-github-actions-matrix-demo
        exclude:
          # Python 3.10 is compatible with Django 3.2+
          - python: "3.10"
            django: "3.1"
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}-alpine
        env:
          POSTGRES_DB: db
          POSTGRES_PASSWORD: P@ssw0rd
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:${{ matrix.mysql }}
        env:
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: P@ssw0rd
        ports:
          - 3306/tcp
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Fetch pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.python }}
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: venv-${{ matrix.python }}-${{ matrix.django }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.12"
      - name: Install dependencies
        run: |
          poetry install -n
          poetry run pip install --no-input django~=${{ matrix.django }}.0
      - name: Verify package versions
        run: |
          python -V
          poetry show django
      - name: Run tests
        working-directory: ./test_secured_fields
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          poetry run python manage.py test

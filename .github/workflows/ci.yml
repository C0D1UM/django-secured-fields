name: CI

on:
  push:
    branches: [ main ]
    paths:
      - "secured_fields/**/*"
      - "test_secured_fields/**/*"
      - "pyproject.toml"
      - "poetry.lock"
  pull_request:
    branches: [ main ]
    paths:
      - "secured_fields/**/*"
      - "test_secured_fields/**/*"
      - "pyproject.toml"
      - "poetry.lock"
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Fetch pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip
      - name: Install dependencies
        run: |
          pip install pylint~=2.0
      - name: Analyzing the code
        run: |
          pylint secured_fields test_secured_fields
  test-pg:
    needs:
      - lint
    uses: c0d1um/django-secured-fields/.github/workflows/test.yml@main
    with:
      database-image: postgres
      database-url: "postgresql://postgres:P%40ssw0rd@localhost"
      database-port: 5432
      database-versions: >-
        [ "12.9-alpine", "13.5-alpine", "14.1-alpine" ]
      database-env: >-
        { "POSTGRES_DB": "db", "POSTGRES_PASSWORD": "P@ssw0rd" }
      database-health-cmd: "pg_isready"
      database-version-codecov: "14.1-alpine"  # newest
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  test-mysql:
    needs:
      - lint
    uses: c0d1um/django-secured-fields/.github/workflows/test.yml@main
    with:
      database-image: mysql
      database-url: "mysql://root:P%40ssw0rd@127.0.0.1"
      database-port: 3306
      database-versions: >-
        [ "5.7", "8.0" ]
      database-env: >-
        { "MYSQL_DATABASE": "db", "MYSQL_ROOT_PASSWORD": "P@ssw0rd" }
      database-health-cmd: "mysqladmin ping"
      database-version-codecov: "8.0"  # newest
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  test-sqlite:
    needs:
      - lint
    uses: c0d1um/django-secured-fields/.github/workflows/test.yml@main
    with:
      database-image: spaster/alpine-sleep
      database-url: "sqlite:///db.sqlite3"
      database-port: 80
      database-versions: >-
        [ "latest" ]
      database-env: "{}"
      database-health-cmd: "true"
      database-version-codecov: "latest"  # newest
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
